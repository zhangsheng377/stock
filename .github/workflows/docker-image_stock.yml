name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # <repo>
  IMAGE_NAME: stock
  # DockerFile
  DOCKER_FILE: Dockerfile


jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ secrets.DOCKER_HUB_USER }}/${{ env.IMAGE_NAME }}
        
    - name: Get Time
      id: time
      uses: nanzm/get-time-action@v1.1
      with:
        timeZone: 8
        format: 'YYYY-MM-DD-HH-mm-ss'
        
    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ${{ env.DOCKER_FILE }}
        build-args:
          QINIU_ACCESS_KEY=${{ secrets.QINIU_ACCESS_KEY }}
          QINIU_SECRET_KEY=${{ secrets.QINIU_SECRET_KEY }}
        push: ${{ github.event_name != 'pull_request' }}
        # tags: ${{ steps.meta.outputs.tags }}-${{ steps.time.outputs.time }}
        tags: ${{ env.REGISTRY }}/${{ secrets.DOCKER_HUB_USER }}/${{ env.IMAGE_NAME }}:latest
        labels: ${{ steps.meta.outputs.labels }}
    
#     - name: Build the Docker image
#       run: docker build . --file Dockerfile_tushare --tag zhangsheng377/test:$(date +%s)
